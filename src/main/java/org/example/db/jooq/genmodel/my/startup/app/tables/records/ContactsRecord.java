/*
 * This file is generated by jOOQ.
 */
package org.example.db.jooq.genmodel.my.startup.app.tables.records;


import javax.annotation.processing.Generated;

import my.startup.app.tables.Contacts;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContactsRecord extends UpdatableRecordImpl<ContactsRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 1725556596;

    /**
     * Setter for <code>app.Contacts.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>app.Contacts.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>app.Contacts.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>app.Contacts.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>app.Contacts.surname</code>.
     */
    public void setSurname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>app.Contacts.surname</code>.
     */
    public String getSurname() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Contacts.CONTACTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Contacts.CONTACTS.NAME;
    }

    @Override
    public Field<String> field3() {
        return Contacts.CONTACTS.SURNAME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getSurname();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getSurname();
    }

    @Override
    public ContactsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ContactsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ContactsRecord value3(String value) {
        setSurname(value);
        return this;
    }

    @Override
    public ContactsRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ContactsRecord
     */
    public ContactsRecord() {
        super(Contacts.CONTACTS);
    }

    /**
     * Create a detached, initialised ContactsRecord
     */
    public ContactsRecord(Integer id, String name, String surname) {
        super(Contacts.CONTACTS);

        set(0, id);
        set(1, name);
        set(2, surname);
    }
}
