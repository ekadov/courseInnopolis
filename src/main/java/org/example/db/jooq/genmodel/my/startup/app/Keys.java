/*
 * This file is generated by jOOQ.
 */
package my.startup.app;


import javax.annotation.processing.Generated;

import my.startup.app.tables.Contacts;
import my.startup.app.tables.People;
import my.startup.app.tables.records.ContactsRecord;
import my.startup.app.tables.records.PeopleRecord;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>app</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ContactsRecord, Integer> IDENTITY_CONTACTS = Identities0.IDENTITY_CONTACTS;
    public static final Identity<PeopleRecord, Integer> IDENTITY_PEOPLE = Identities0.IDENTITY_PEOPLE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ContactsRecord> KEY_CONTACTS_PRIMARY = UniqueKeys0.KEY_CONTACTS_PRIMARY;
    public static final UniqueKey<PeopleRecord> KEY_PEOPLE_PRIMARY = UniqueKeys0.KEY_PEOPLE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<ContactsRecord, Integer> IDENTITY_CONTACTS = Internal.createIdentity(Contacts.CONTACTS, Contacts.CONTACTS.ID);
        public static Identity<PeopleRecord, Integer> IDENTITY_PEOPLE = Internal.createIdentity(People.PEOPLE, People.PEOPLE.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ContactsRecord> KEY_CONTACTS_PRIMARY = Internal.createUniqueKey(Contacts.CONTACTS, "KEY_Contacts_PRIMARY", Contacts.CONTACTS.ID);
        public static final UniqueKey<PeopleRecord> KEY_PEOPLE_PRIMARY = Internal.createUniqueKey(People.PEOPLE, "KEY_People_PRIMARY", People.PEOPLE.ID);
    }
}
